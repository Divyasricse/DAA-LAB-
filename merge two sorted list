# DAA-LAB-

#include <iostream>

using namespace std;

struct listnode{
    int val;
    listnode *next;
    listnode():val(0),next(nullptr){}
    listnode(int x):val(x),next(nullptr){}
    listnode(int x,listnode *next):val(x),next(next){}

}*newnode,*temp;
struct listnode* mergetwolist(struct listnode* list1,struct listnode* list2)
{
    if(list1==NULL)
     return list2;
    if(list2==NULL)
     return list1; 
    struct listnode * ptr=list1;
    if(list1->val>list2->val){
      ptr=list2;
      list2=list2->next;
    }
    else{
      list1=list1->next;
    }
     struct listnode *curr=ptr;
     while(list1!=NULL && list2!=NULL){
         if(list1->val>list2->val){
             curr->next=list2;
             list2=list2->next;
         }
         else{
            curr->next=list1;
            list1=list1->next;
         }
     
     curr=curr->next;
     }
     if(list1==NULL){
             curr->next=list2; 
     }
     else{
             curr->next=list1;
     }
     return ptr;
}
struct listnode* create( struct listnode* head,struct listnode* tail)
{
        int valu;
        char ch;
        do{
                newnode=(struct listnode *)malloc(sizeof(struct listnode));
                printf("enter the value: ");
                scanf("%d",&valu);
                newnode->val=valu;
                newnode->next=NULL;
                if(head==NULL)
                {
                        head=newnode;
                        tail=newnode;
                }
                else
                {
                        tail->next=newnode;
                        tail=newnode;

                }
                printf("Do you want to insert another element? if yes press y else n: ");
                fflush(stdin);
                scanf(" %c",&ch);
        }while(ch=='y');
    return head;
}

               

void display(struct listnode* head ){
    temp=head;
    while(temp!=NULL){
        printf("%d",temp->val);
        temp=temp->next;
    }
}
struct listnode *head1=NULL;
struct listnode *head2=NULL;
struct listnode *tail1=NULL;
struct listnode *tail2=NULL;
struct listnode *res=NULL;
int main(){
    head1=create(head1,tail1);
    head2=create(head2,tail2);
    res=mergetwolist(head1,head2);
    display(res);
    return 0;
}



